{"version":3,"sources":["redux/reducers/arr.js","redux/reducers/arrSorted.js","redux/reducers/frames.js","redux/reducers/index.js","redux/reducers/algo.js","redux/reducers/arrSize.js","redux/reducers/speed.js","redux/reducers/isSorting.js","redux/store/index.js","redux/actions/changeArr.js","redux/actions/changeSortingStatus.js","components/navBar/SizeSlider.js","redux/actions/changeArrSize.js","redux/actions/changeArrSorted.js","components/navBar/SpeedSlider.js","redux/actions/changeSpeed.js","components/navBar/AlgoSelector.js","redux/actions/changeAlgo.js","components/navBar/ArrayModifier.js","components/navBar/SortButton.js","redux/actions/changeFrames.js","algorithms/helperFunctions.js","algorithms/bubbleSort.js","algorithms/insertionSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/heapSort.js","algorithms/shellSort.js","algorithms/index.js","components/navBar/Appbar.js","components/Main.js","components/Sort.js","App.js","serviceWorker.js","index.js"],"names":["initialState","Array","keys","map","num","color","mainReducer","combineReducers","algo","state","action","type","payload","arrSize","arr","arrSorted","speed","isSorting","status","frames","store","createStore","changeArr","changeSortingStatus","handleOnSizeChange","event","elem","dispatch","changeArrSize","changeArrSorted","SizeSlider","className","Slider","disabled","id","value","aria-labelledby","valueLabelDisplay","step","min","max","onChange","SpeedSlider","useDispatch","e","changeSpeed","AlgoSelector","algorithms","Select","changeAlgo","target","MenuItem","key","name","ShuffleButton","Button","variant","onClick","tmp","length","index","Math","floor","random","splice","handleOnShuffleClick","ReverseButton","reverse","SortButton","style","background","getState","JSON","stringify","method","changeFrames","handleOnSortClick","defaultYield","doneYield","swapYield","filter","includes","i","j","bubbleSort","arrCopy","len","insertionSort","k","selectionYield","selectionSort","filteArr","j_min","swapYieldQuick","partition","main","quickSort","pivot","left","right","heap_root","heapSort","shellSort","temp","parseInt","Appbar","useSelector","sort","a","frame","next","done","Main","setTimeout","width","height","backgroundColor","Sort","App","Boolean","window","location","hostname","match","jsx","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f66e68b.chunk.js","sourcesContent":["const initialState = [...Array(30).keys()].map(num => num+1).map(num => ({num, color: null}));\r\nexport const arr = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_ARRAY':\r\n      return (state = action.payload.arr);\r\n    default:\r\n      return state;\r\n  }\r\n};","const initialState = [...Array(30).keys()].map(num => num+1).map(num => ({num, color: null}));\r\nexport const arrSorted = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_ARRAY_SORTED':\r\n      return (state = action.payload.arr);\r\n    default:\r\n      return state;\r\n  }\r\n};","function *initialState(){\r\n  yield null;\r\n  return;\r\n}\r\n\r\nexport const frames = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_FRAMES':\r\n      return(state = action.payload.frames);\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { algo } from './algo';\r\nimport { arrSize } from './arrSize';\r\nimport { arr } from './arr';\r\nimport { arrSorted } from './arrSorted';\r\nimport { speed } from './speed';\r\nimport { isSorting } from './isSorting';\r\nimport { frames } from './frames';\r\n\r\nexport const mainReducer = combineReducers({\r\n  algo,\r\n  arrSize,\r\n  arr,\r\n  arrSorted,\r\n  speed,\r\n  isSorting,\r\n  frames\r\n});","export const algo = (state = 0, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_ALGO':\r\n      return (state = action.payload.algo);\r\n    default:\r\n      return state;\r\n  }\r\n};","export const arrSize = (state = 30, action) => {\r\n  switch(action.type){\r\n    case('CHANGE_ARR_SIZE'):\r\n      return (state = action.payload.arrSize);\r\n    default:\r\n      return state; \r\n  }\r\n};","export const speed = (state = 740, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_SPEED':\r\n      return (state = action.payload.speed);\r\n    default: \r\n      return state;\r\n  }\r\n};","export const isSorting = (state = false, action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_SORTING_STATUS':\r\n      return( state = action.payload.status);\r\n    case 'FLIP_SORTING_STATUS':\r\n      return( state = !state);\r\n    default: \r\n      return state;\r\n  }\r\n};","import { createStore } from 'redux';\r\nimport { mainReducer } from '../reducers';\r\n\r\nexport const store = createStore(mainReducer);","export const changeArr = arr => {\r\n  return({\r\n    type: 'CHANGE_ARRAY',\r\n    payload: {arr}\r\n  });\r\n};","export const changeSortingStatus = status => {\r\n  return({\r\n    type: {status} ? 'CHANGE_SORTING_STATUS' : 'FLIP_SORTING_STATUS',\r\n    payload: {status}\r\n  });\r\n};","import React from \"react\";\r\nimport { Slider } from \"@material-ui/core\";\r\nimport { store } from \"../../redux/store\";\r\nimport { changeArrSize, changeArr, changeArrSorted } from \"../../redux/actions\";\r\n\r\nconst handleOnSizeChange = (event, arrSize) => {\r\n  const arr = [...Array(arrSize).keys()]\r\n    .map((elem) => elem + 1)\r\n    .map((num) => ({ num, color: null }));\r\n  const arrSorted = [...arr].map((num) => ({ num, color: null }));\r\n  store.dispatch(changeArrSize(arrSize));\r\n  store.dispatch(changeArr(arr));\r\n  store.dispatch(changeArrSorted(arrSorted));\r\n};\r\n\r\nexport const SizeSlider = ({ arrSize, isSorting }) => {\r\n  return (\r\n    <div className=\"slider\">\r\n      <p className=\"label\">Size</p>\r\n      <Slider\r\n        disabled={isSorting ? true : false}\r\n        id=\"array_slider\"\r\n        value={arrSize}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={3}\r\n        min={5}\r\n        max={30}\r\n        onChange={handleOnSizeChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const changeArrSize = arrSize => {\r\n  return({\r\n    type: 'CHANGE_ARR_SIZE',\r\n    payload: {arrSize}\r\n  });\r\n};","export const changeArrSorted = arr => {\r\n  return({\r\n    type: 'CHANGE_ARRAY_SORTED',\r\n    payload: {arr}\r\n  });\r\n};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Slider } from \"@material-ui/core\";\r\nimport { changeSpeed } from \"../../redux/actions\";\r\n\r\nexport const SpeedSlider = ({ speed, isSorting }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"slider\">\r\n      <p className=\"label\">Speed</p>\r\n      <Slider\r\n        disabled={isSorting ? true : false}\r\n        id=\"speed_slider\"\r\n        value={speed}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={10}\r\n        min={500}\r\n        max={2000}\r\n        onChange={(e, speed) => dispatch(changeSpeed(speed))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const changeSpeed = speed => {\r\n  return({\r\n    type: 'CHANGE_SPEED',\r\n    payload: {speed}\r\n  });\r\n};","import React from \"react\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeAlgo } from \"../../redux/actions\";\r\n\r\nexport const AlgoSelector = ({ algorithms, algo, isSorting }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"selector\">\r\n      <Select\r\n        disabled={isSorting ? true : false}\r\n        id=\"algo_selector\"\r\n        value={algo}\r\n        onChange={(e) => dispatch(changeAlgo(e.target.value))}\r\n      >\r\n        {algorithms.map((algo) => (\r\n          <MenuItem key={algo.key} value={algo.key}>\r\n            {algo.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n","export const changeAlgo = algo => {\r\n  return({\r\n    type: 'CHANGE_ALGO',\r\n    payload: {algo}\r\n  });\r\n};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { changeArr } from \"../../redux/actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst handleOnShuffleClick = (arr) => {\r\n  let tmp = [...arr];\r\n  let arrSize = tmp.length;\r\n  while (arrSize > 0) {\r\n    let index = Math.floor(Math.random() * arrSize);\r\n    arrSize--;\r\n    tmp[index] = tmp.splice(arrSize, 1, tmp[index])[0];\r\n  }\r\n  store.dispatch(changeArr(tmp));\r\n};\r\n\r\nexport const ShuffleButton = ({ arr, isSorting }) => {\r\n  return (\r\n    <Button\r\n      disabled={isSorting ? true : false}\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n      onClick={() => handleOnShuffleClick(arr)}\r\n    >\r\n      Shuffle\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport const ReverseButton = ({ arr, isSorting }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Button\r\n      disabled={isSorting ? true : false}\r\n      color=\"primary\"\r\n      variant=\"contained\"\r\n      onClick={() => dispatch(changeArr([...[...arr].reverse()]))}\r\n    >\r\n      Reverse\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { store } from \"../../redux/store\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { changeSortingStatus, changeFrames } from \"../../redux/actions\";\r\n\r\nconst handleOnSortClick = (algorithms) => {\r\n  const { arr, arrSorted, algo, isSorting } = store.getState();\r\n  if (!isSorting && JSON.stringify(arr) !== JSON.stringify(arrSorted)) {\r\n    const frames = algorithms[algo].method(arr.map((elem) => elem.num));\r\n    store.dispatch(changeFrames(frames));\r\n    store.dispatch(changeSortingStatus(true));\r\n  } else {\r\n    store.dispatch(changeSortingStatus(false));\r\n  }\r\n};\r\n\r\nexport const SortButton = ({ algorithms, isSorting }) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{ background: isSorting ? \"red\" : \"green\", color: \"white\" }}\r\n        onClick={() => handleOnSortClick(algorithms)}\r\n      >\r\n        {isSorting ? \"Stop\" : \"Sort it!\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","export const changeFrames = frames => {\r\n  return({\r\n    type: 'CHANGE_FRAMES',\r\n    payload: {frames}\r\n  });\r\n};","export const filter = (num, arr) => {\r\n  return {\r\n    num,\r\n    color: arr.includes(num) ? \"#FF0000\" : null\r\n  };\r\n};\r\n\r\nexport function* defaultYield(arr) {\r\n  yield [...arr].map((num) => ({ num, color: null }));\r\n  return;\r\n}\r\n\r\nexport function* doneYield(arr) {\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    yield [...arr].map((num) => ({\r\n      num,\r\n      color: num <= arr[i] ? \"#00FF00\" : null\r\n    }));\r\n  }\r\n  return;\r\n}\r\n\r\nexport function* swapYield(arr, i, j) {\r\n  yield [...arr].map((num) => filter(num, [arr[i], arr[j]]));\r\n  arr[i] = arr.splice(j, 1, arr[i])[0];\r\n  yield [...arr].map((num) => filter(num, [arr[i], arr[j]]));\r\n  yield* defaultYield(arr);\r\n  return;\r\n}\r\n","import { defaultYield, doneYield, swapYield } from './helperFunctions';\r\n\r\nexport function *bubbleSort(arr){\r\n  let arrCopy = [...arr];\r\n  let len = arrCopy.length;\r\n  for(let i=0; i<len; ++i){\r\n    for(let j=0; j<len-1-i; ++j){\r\n      if(arrCopy[j] > arrCopy[j+1]){\r\n        yield* swapYield(arrCopy, j, j+1);\r\n      }\r\n    }\r\n  }\r\n  yield* doneYield(arrCopy);\r\n  yield* defaultYield(arrCopy);\r\n  return;\r\n};","import { filter, defaultYield, doneYield } from './helperFunctions';\r\n\r\nexport function *insertionSort(arr){\r\n  let arrCopy = [...arr];\r\n  let len = arrCopy.length;\r\n  for (let i = 1; i < len; i++){\r\n    if (arrCopy[i] < arrCopy[0]) {\r\n      for(let k = i; k > 0; --k){\r\n        yield [...arrCopy].map(num => filter(num,[arrCopy[k], arrCopy[k-1]]));\r\n        arrCopy.splice(k,0,arrCopy.splice(k-1,1)[0]);\r\n        yield [...arrCopy].map(num => filter(num,[arrCopy[k], arrCopy[k-1]]));\r\n        yield* defaultYield(arrCopy);\r\n      }\r\n    } \r\n    else if (arrCopy[i] > arrCopy[i-1]){\r\n      continue;\r\n    } \r\n    else {\r\n      for (let j = 1; j < i; j++) {\r\n        if (arrCopy[i] > arrCopy[j-1] && arrCopy[i] < arrCopy[j]){\r\n          for(let k = i; k > j; --k){\r\n            yield [...arrCopy].map(num => filter(num,[arrCopy[k], arrCopy[k-1]]));\r\n            arrCopy.splice(k,0,arrCopy.splice(k-1,1)[0]);\r\n            yield [...arrCopy].map(num => filter(num,[arrCopy[k], arrCopy[k-1]]));\r\n            yield* defaultYield(arrCopy);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  yield* doneYield(arrCopy);\r\n  yield* defaultYield(arrCopy);\r\n  return;\r\n};","import { defaultYield, doneYield, swapYield } from \"./helperFunctions\";\r\n\r\nfunction* selectionYield(arr, filteArr, color) {\r\n  yield [...arr].map((num) => ({\r\n    num,\r\n    color: filteArr.includes(num) ? color : null\r\n  }));\r\n  return;\r\n}\r\n\r\nexport function* selectionSort(arr) {\r\n  let arrCopy = [...arr];\r\n  let len = arrCopy.length;\r\n  for (let i = 0; i < len - 1; ++i) {\r\n    let j_min = i;\r\n    for (let j = i + 1; j < len; ++j) {\r\n      yield* selectionYield(arrCopy, [arrCopy[j_min]], \"#0000FF\");\r\n      yield* selectionYield(arrCopy, [arrCopy[j_min], arrCopy[j]], \"#FF0000\");\r\n      if (arrCopy[j] < arrCopy[j_min]) {\r\n        j_min = j;\r\n      }\r\n    }\r\n    if (j_min !== i) {\r\n      yield* swapYield(arrCopy, j_min, i);\r\n    }\r\n  }\r\n  yield* doneYield(arrCopy);\r\n  yield* defaultYield(arrCopy);\r\n  return;\r\n}\r\n","import { defaultYield, doneYield } from \"./helperFunctions\";\r\n\r\nfunction* swapYieldQuick(arr, i, j, pivot) {\r\n  yield [...arr].map((num) => ({\r\n    num,\r\n    color:\r\n      num === pivot\r\n        ? \"#0000FF\"\r\n        : num === arr[i] || num === arr[j]\r\n        ? \"#FF0000\"\r\n        : null\r\n  }));\r\n  arr[i] = arr.splice(j, 1, arr[i])[0];\r\n  yield [...arr].map((num) => ({\r\n    num,\r\n    color:\r\n      num === pivot\r\n        ? \"#0000FF\"\r\n        : num === arr[i] || num === arr[j]\r\n        ? \"#FF0000\"\r\n        : null\r\n  }));\r\n  yield [...arr].map((num) => ({\r\n    num,\r\n    color: num === pivot ? \"#0000FF\" : null\r\n  }));\r\n  return;\r\n}\r\n\r\nfunction* partition(arr, left, right) {\r\n  let pivot = arr[Math.floor((right + left) / 2)],\r\n    i = left,\r\n    j = right;\r\n  while (i <= j) {\r\n    while (arr[i] < pivot) {\r\n      i++;\r\n    }\r\n    while (arr[j] > pivot) {\r\n      j--;\r\n    }\r\n    if (i <= j) {\r\n      yield* swapYieldQuick(arr, i, j, pivot);\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\nfunction* main(arr, len, left, right) {\r\n  let index;\r\n  if (len > 1) {\r\n    index = yield* partition(arr, left, right, index);\r\n    if (left < index - 1) {\r\n      yield* main(arr, len, left, index - 1);\r\n    }\r\n    if (index < right) {\r\n      yield* main(arr, len, index, right);\r\n    }\r\n  }\r\n}\r\n\r\nexport function* quickSort(arr) {\r\n  let arrCopy = [...arr];\r\n  let len = arrCopy.length;\r\n  yield* main(arrCopy, len, 0, len - 1);\r\n  yield* doneYield(arrCopy);\r\n  yield* defaultYield(arrCopy);\r\n  return;\r\n}\r\n","import { defaultYield, doneYield, swapYield } from './helperFunctions';\r\n\r\nfunction *heap_root(arr, len, i){\r\n  var left = 2 * i + 1;\r\n  var right = 2 * i + 2;\r\n  var max = i;\r\n\r\n  if (left < len && arr[left] > arr[max]) {\r\n    max = left;\r\n  }\r\n\r\n  if (right < len && arr[right] > arr[max])     {\r\n    max = right;\r\n  }\r\n\r\n  if (max !== i) {\r\n    yield* swapYield(arr, i, max);\r\n    yield* heap_root(arr, len, max);\r\n  }\r\n}\r\n\r\nexport function *heapSort(arr){\r\n  let arrCopy = [...arr];\r\n  let len = arrCopy.length;\r\n\r\n  for(var i = Math.floor(len / 2); i >= 0; i -= 1){\r\n    yield* heap_root(arrCopy, len, i);\r\n  }\r\n\r\n  for(i = len - 1; i > 0; i--){\r\n    yield* swapYield(arrCopy, 0, i);\r\n    len--;\r\n    yield* heap_root(arrCopy, len, 0);\r\n  }\r\n  yield* doneYield(arrCopy);\r\n  yield* defaultYield(arrCopy);\r\n  return;\r\n}\r\n","import { defaultYield, doneYield, swapYield } from \"./helperFunctions\";\r\n\r\nexport function* shellSort(arr) {\r\n  let arrCopy = [...arr];\r\n  let len = arrCopy.length;\r\n\r\n  let step = Math.floor(len / 2);\r\n  while (step > 0) {\r\n    for (let i = step; i < len; i++) {\r\n      let j = i;\r\n      let temp = arrCopy[i];\r\n\r\n      while (j >= step && arrCopy[j - step] > temp) {\r\n        yield* swapYield(arrCopy, j - step, j);\r\n        j -= step;\r\n      }\r\n      arrCopy[j] = temp;\r\n    }\r\n\r\n    if (step === 2) {\r\n      step = 1;\r\n    } else {\r\n      step = parseInt((step * 5) / 11);\r\n    }\r\n  }\r\n  yield* doneYield(arrCopy);\r\n  yield* defaultYield(arrCopy);\r\n  return;\r\n}\r\n","import { bubbleSort } from \"./bubbleSort\";\r\nimport { insertionSort } from \"./insertionSort\";\r\nimport { selectionSort } from \"./selectionSort\";\r\nimport { quickSort } from \"./quickSort\";\r\nimport { heapSort } from \"./heapSort\";\r\nimport { shellSort } from \"./shellSort\";\r\n\r\nexport const algorithms = [\r\n  { name: \"Bubble Sort\", key: 0, method: bubbleSort },\r\n  { name: \"Insertion Sort\", key: 1, method: insertionSort },\r\n  { name: \"Selection Sort\", key: 2, method: selectionSort },\r\n  { name: \"Quick Sort\", key: 3, method: quickSort },\r\n  { name: \"Heap Sort\", key: 4, method: heapSort },\r\n  { name: \"Shell Sort\", key: 5, method: shellSort }\r\n];\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { SizeSlider } from './SizeSlider';\r\nimport { SpeedSlider } from './SpeedSlider';\r\nimport { AlgoSelector } from './AlgoSelector';\r\nimport { ReverseButton, ShuffleButton } from './ArrayModifier';\r\nimport { SortButton } from './SortButton';\r\nimport { algorithms } from '../../algorithms';\r\n\r\nexport const Appbar = () => {\r\n  const algo = useSelector(state => state.algo);\r\n  const arr = useSelector(state => state.arr);\r\n  const arrSize = useSelector(state => state.arrSize);\r\n  const speed = useSelector(state => state.speed);\r\n  const isSorting = useSelector(state => state.isSorting);\r\n\r\n  return(\r\n    <div className='toolbar'>\r\n      <SizeSlider arrSize={arrSize} isSorting={isSorting}/>\r\n      <SpeedSlider speed={speed} isSorting={isSorting}/>\r\n      <AlgoSelector algorithms={algorithms} algo={algo} isSorting={isSorting}/>\r\n      <ReverseButton arr={arr} isSorting={isSorting}/>\r\n      <ShuffleButton arr={arr} isSorting={isSorting}/>\r\n      <SortButton algorithms={algorithms} isSorting={isSorting}/>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeSortingStatus, changeArr } from \"../redux/actions\";\r\nimport { store } from \"../redux/store\";\r\n\r\nconst sort = async () => {\r\n  const { frames } = store.getState();\r\n  const frame = frames.next();\r\n  if (!frame.done) {\r\n    store.dispatch(changeArr(frame.value));\r\n  } else {\r\n    store.dispatch(changeSortingStatus(false));\r\n  }\r\n};\r\n\r\nexport const Main = () => {\r\n  const arrSize = useSelector((state) => state.arrSize);\r\n  const arr = useSelector((state) => state.arr);\r\n  const speed = useSelector((state) => state.speed);\r\n  const isSorting = useSelector((state) => state.isSorting);\r\n\r\n  if (isSorting) {\r\n    setTimeout(() => sort(), 1000 - speed);\r\n  }\r\n\r\n  const width = `${100 / arrSize}%`;\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        {arr.map((elem) => {\r\n          const { num, color } = elem;\r\n          const height = `${((num + 1) / (arrSize + 1)) * 100}%`;\r\n          const backgroundColor =\r\n            isSorting && color\r\n              ? color\r\n              : `hsl(${(num / arrSize) * 360},90%,60%)`;\r\n          return (\r\n            <div\r\n              key={num}\r\n              className=\"bar\"\r\n              style={{ height, width, backgroundColor }}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Appbar } from \"./navBar/Appbar\";\r\nimport { Main } from \"./Main\";\r\n\r\nexport const Sort = () => {\r\n  return (\r\n    <>\r\n      <div className=\"sort\">\r\n        <Appbar />\r\n        <Main />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sort } from \"./components/Sort\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Sort />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}